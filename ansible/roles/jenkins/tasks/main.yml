---
# tasks file for ./roles/jenkins/
- name: Update the system
  apt:
    update_cache: yes
    force_apt_get: yes
    cache_valid_time: 3600

- name: Install Java (Jenkins requires Java)
  apt:
    name: openjdk-11-jdk
    state: present
    
- name: add jenkins key 
  apt_key:  # ansible module to add key
    url:  https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    state: present 

- name: add jenkins repo 
  apt_repository: #ansible module to add repo 
    repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
    state: present 

- name: Update apt cache after adding Jenkins repo
  apt:
    update_cache: yes

- name: Install Jenkins
  apt:
    name: jenkins
    state: present

- name: Start Jenkins service
  systemd:
    name: jenkins
    state: started
    enabled: yes

- name: Ensure Jenkins is running
  service:
    name: jenkins
    state: started

- name: Open firewall for Jenkins port (8080)
  ufw:
    rule: allow
    port: 8080
    proto: tcp

- name: Ensure the destination directory exists
  file:
    path: "/var/jenkins_home/workspace/Dockerized-App-Build-pipeline"
    state: directory
    mode: '0755'

- name: Copy inventory file
  copy:
    src: inventory.ini
    dest: "/var/jenkins_home/workspace/Dockerized-App-Build-pipeline/inventory.ini"

- name: Copy private_key file 
  copy:
    src: private_key.pem
    dest: "/var/jenkins_home/workspace/Dockerized-App-Build-pipeline/private_key.pem"

- name: Copy playbook files
  copy:
    src: /Deployment/
    dest: "/var/jenkins_home/workspace/Dockerized-App-Build-pipeline/Deployment/"
    remote_src: no
    directory_mode: '0755'



# - name: Update the system
#   apt:
#     update_cache: yes
#     force_apt_get: yes
#     cache_valid_time: 3600

# - name: Install prerequisites for Docker
#   apt:
#     name:
#       - apt-transport-https
#       - ca-certificates
#       - curl
#       - software-properties-common
#     state: present

# - name: Add Docker GPG apt Key
#   apt_key:
#     url: https://download.docker.com/linux/ubuntu/gpg
#     state: present

# - name: Add Docker Repository
#   apt_repository:
#     repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
#     state: present

# - name: Update apt cache after adding Docker repo
#   apt:
#     update_cache: true

# - name: Install Docker
#   apt:
#     name:
#       - docker-ce
#       - docker-ce-cli
#       - containerd.io
#     state: present

# - name: Install Docker Compose
#   apt:
#     name: docker-compose
#     state: present

# - name: Ensure Docker is started and enabled
#   systemd:
#     name: docker
#     enabled: true
#     state: started

# - name: Pull Jenkins Docker image
#   docker_image:
#     name: jenkins/jenkins
#     tag: lts
#     source: pull

# - name: Ensure Jenkins home directory exists on the host
#   file:
#     path: /var/jenkins_home
#     state: directory
#     owner: 1000
#     group: 1000
#     mode: '0755'

# - name: Create Jenkins Docker container
#   docker_container:
#     name: jenkins
#     image: jenkins/jenkins:lts
#     ports:
#       - "8080:8080"
#       - "50000:50000"
#     volumes:
#       - /var/jenkins_home:/var/jenkins_home
#     state: started
#   register: jenkins_container

# # - name: Run Jenkins container
# #   command: docker run -d -p 8080:8080 -p 50000:50000 -v /var/jenkins_home:/var/jenkins_home --name jenkins jenkins/jenkins:lts
# #   when: jenkins_container.changed

# # - name: Wait for Docker container to be running
# #   wait_for:
# #     timeout: 30             # Total timeout for waiting
# #     delay: 10                # Initial delay before the first check
# #     state: started           # Wait until the container is started
# #     port: 8080                 # Adjust the port to match your application
# #   when: jenkins_container.changed  # Proceed only if the container was changed/started

# - name: Update apt cache inside Jenkins container
#   command: docker exec --user root jenkins apt-get update

# - name: Install Ansible inside Jenkins container
#   command: docker exec --user root jenkins apt-get install ansible -y

# - name: Ensure the destination directory exists
#   file:
#     path: "/var/jenkins_home/workspace/Dockerized-App-Build-pipeline"
#     state: directory
#     mode: '0755'

# - name: Copy inventory file
#   copy:
#     src: inventory.ini
#     dest: "/var/jenkins_home/workspace/Dockerized-App-Build-pipeline/inventory.ini"

# - name: Copy private_key file 
#   copy:
#     src: private_key.pem
#     dest: "/var/jenkins_home/workspace/Dockerized-App-Build-pipeline/private_key.pem"

# - name: Copy playbook files
#   copy:
#     src: /Deployment/
#     dest: "/var/jenkins_home/workspace/Dockerized-App-Build-pipeline/Deployment/"
#     remote_src: no
#     directory_mode: '0755'
  
# - name: Open firewall for Jenkins port (8080)
#   ufw:
#     rule: allow
#     port: 8080
#     proto: tcp